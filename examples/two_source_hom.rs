// use std::f64::consts::PI;
use qm::*;
extern crate ndarray;
use ndarray::prelude::*;


//TODO: Original output of jsa -> convert from (re + im*j) to c64::new(re, im)

pub fn main(){

	let signal = array![1.444682468414305251e-06, 1.497341234207152617e-06, 1.549999999999999983e-06, 1.602658765792847349e-06, 1.655317531585694715e-06];
	let idler = array![1.457282220278072330e-06, 1.510931735289744386e-06, 1.564581250301416654e-06, 1.618230765313088710e-06, 1.671880280324760978e-06];
	let jsa = array![
	[c64::new(0.000000000000000000e+00, 0.000000000000000000e+00),  c64::new(0.000000000000000000e+00, 0.000000000000000000e+00),  c64::new(0.000000000000000000e+00, 0.000000000000000000e+00),  c64::new(-4.319853608960000000e+11 , 4.944164945920000000e+11),  c64::new(4.027076763975680000e+14 , -1.382071738040320000e+14)],
	[c64::new(0.000000000000000000e+00, 0.000000000000000000e+00),  c64::new(0.000000000000000000e+00, 0.000000000000000000e+00),  c64::new(3.088739532800000000e+10, 1.953169244160000000e+11),  c64::new(5.044385402060800000e+14,  6.935267571138560000e+14),  c64::new(3.599628480000000000e+08 , 8.799449088000000000e+09)],
	[c64::new(0.000000000000000000e+00, 0.000000000000000000e+00),  c64::new(-3.324027863040000000e+12, 5.993386737664000000e+12),  c64::new(-1.230285999964160000e+14, 2.582835760201728000e+15),  c64::new(-6.623384960000000000e+08, - 1.764741888000000000e+09),  c64::new(0.000000000000000000e+00 , 0.000000000000000000e+00)],
	[c64::new(1.499729264640000000e+11, 4.510301224960000000e+11),  c64::new(-4.557713178624000000e+13, -6.026835682918400000e+14),  c64::new(1.010083635200000000e+10, 1.994112204800000000e+10) , c64::new(0.000000000000000000e+00, 0.000000000000000000e+00),  c64::new(0.000000000000000000e+00 , 0.000000000000000000e+00)],
	[c64::new(-1.112635353333760000e+14, -1.675669075394560000e+14),  c64::new(-1.393738854400000000e+10, -4.946968166400000000e+10),  c64::new(0.000000000000000000e+00 , 0.000000000000000000e+00),  c64::new(0.000000000000000000e+00, 0.000000000000000000e+00),  c64::new(0.000000000000000000e+00 , 0.000000000000000000e+00)]];

	let dt = 1.0e+06_f64;
	let norm = find_two_source_hom(signal, idler, jsa,dt);
	println!("{:?}",norm);
}